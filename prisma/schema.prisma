generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  USER
  ADMIN
  SUPERADMIN
}

enum Languages {
  RU
  EN
}

model User {
  id                  Int        @id @default(autoincrement())
  firstName           String     @db.VarChar(64)
  lastName            String     @db.VarChar(64)
  role                UserRole   @default(USER)
  bio                 String?
  nationality         String?
  email               String     @unique
  username            String     @unique
  phone               String?
  photo               String?
  location            Location[]
  messages            Message[]
  chats               Chat[]
  password            String
  refreshToken        String?
  resetPasswordSecret String?
  verificationToken   String?
  isActive            Boolean    @default(true)
  isVerified          Boolean    @default(false)
  lastVisit           DateTime   @default(now())
  createdAt           DateTime   @default(now())
  updatedAt           DateTime   @updatedAt
}

model Location {
  id       Int     @id @default(autoincrement())
  ip       String? @db.VarChar(50)
  city     String? @db.VarChar(150)
  region   String? @db.VarChar(150)
  country  String? @db.VarChar(150)
  timezone String?
  user     User    @relation(fields: [userId], references: [id])
  userId   Int
}

model Message {
  id          Int      @id @default(autoincrement())
  userId      Int
  user        User     @relation(fields: [userId], references: [id])
  text        String
  ai          Boolean? @default(false)
  chat        Chat     @relation(fields: [chatId], references: [id])
  chatId      Int
  audioSource String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Chat {
  id        Int       @id @default(autoincrement())
  userId    Int
  user      User      @relation(fields: [userId], references: [id])
  title     String    @db.VarChar(25)
  slug      String
  messages  Message[]
  language  Languages @default(EN)
  isActive  Boolean   @default(true)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  images    Image[]
}

model Image {
  id          Int      @id @default(autoincrement())
  chatId      Int
  chat        Chat     @relation(fields: [chatId], references: [id])
  url         String
  text        String   @db.VarChar(8192)
  output      String
  audioSource String?
  createdAt   DateTime @default(now())
}
